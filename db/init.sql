use possystem;

DROP TABLE IF EXISTS `SERVICE_ACCOUNT`;

CREATE TABLE `SERVICE_ACCOUNT` (
	`SERVICE_ID`	VARCHAR(20)	PRIMARY KEY,
	`SERVICE_EMAIL`	VARCHAR(50)	NOT NULL,
	`SERVICE_PW` VARCHAR(20) NOT NULL,
	`SERVICE_TYPE` CHAR(2) NOT NULL DEFAULT 'U',
	`REGDATE`	DATE NOT NULL,
	`DELFLAG`	CHAR(2) NOT NULL DEFAULT 'N'
);

DROP TABLE IF EXISTS `SERVICE_BOARD`;

CREATE TABLE `SERVICE_BOARD` (
	`BOARD_SEQ`	INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
	`SERVICE_ID` VARCHAR(20) NOT NULL,
	`READCOUNT`	INTEGER	NOT NULL DEFAULT 0,
	`REGDATE` DATE NOT NULL,
	`TITLE`	VARCHAR(50)	NOT NULL,
	`CONTENT`	VARCHAR(4000)	NOT NULL,
	`REF`	INTEGER NOT NULL,
	`STEP`	INTEGER	NOT NULL,
	`DEPTH`	INTEGER	NOT NULL,
	`TYPE`	CHAR NOT NULL	DEFAULT 'Q',
	`DELFLAG`	CHAR NOT NULL DEFAULT 'N',
	CONSTRAINT SERVICE_ID_FK FOREIGN KEY (SERVICE_ID) REFERENCES SERVICE_ACCOUNT (SERVICE_ID) ON DELETE RESTRICT
);

DROP TABLE IF EXISTS `SERVICE_FILE`;

CREATE TABLE `SERVICE_FILE` (
	`FILE_SEQ`	INTEGER	AUTO_INCREMENT PRIMARY KEY NOT NULL,
	`BOARD_SEQ`	INTEGER	NOT NULL,
	`ORIGIN_FNAME` VARCHAR(500) NOT NULL,
	`STORED_FNAME` VARCHAR(500)	NOT NULL,
	`FILE_SIZE`	INTEGER	NOT NULL,
	`REGDATE`	DATE NOT NULL,
	`DELFLAG`	CHAR NOT NULL DEFAULT 'N',
	CONSTRAINT SERVICE_FILE_FK FOREIGN KEY (BOARD_SEQ) REFERENCES SERVICE_BOARD (BOARD_SEQ) ON DELETE RESTRICT
);

DROP TABLE IF EXISTS `SERVICE_STORE`;

CREATE TABLE `SERVICE_STORE` (
	`STORE_SEQ`	INTEGER AUTO_INCREMENT PRIMARY KEY NOT NULL,
	`SERVICE_ID` VARCHAR(20) NOT NULL,
	`STORE_NAME` VARCHAR(50) NOT NULL,
	`STORE_DETAIL` VARCHAR(4000) NOT NULL,
	`STORE_TYPE`	VARCHAR(30)	NOT NULL,
	`STORE_ADDRESS`	VARCHAR(200) NOT NULL,
	`STORE_TEL`	VARCHAR(20)	NOT NULL,
	`STORE_HOUR` VARCHAR(50) NOT NULL,
	`DELFLAG`	CHAR(2) NOT NULL DEFAULT 'N',
	CONSTRAINT SERVICE_STORE_FK FOREIGN KEY (SERVICE_ID) REFERENCES  SERVICE_ACCOUNT (SERVICE_ID) ON DELETE RESTRICT
);


INSERT INTO SERVICE_ACCOUNT(SERVICE_ID, SERVICE_EMAIL, SERVICE_PW, REGDATE) VALUES(
  'winetree', 'winetreee@gmail.com', 'winetree', now()
);

INSERT INTO SERVICE_BOARD(SERVICE_ID, REGDATE, TITLE, CONTENT, REF, STEP, DEPTH) VALUES (
  'winetree', now(), 'title', 'content', 0,0,0
);

INSERT INTO SERVICE_FILE(BOARD_SEQ, ORIGIN_FNAME, STORED_FNAME, FILE_SIZE, REGDATE) VALUES (
  1, 'ORIGIN_FNAME', 'STORED_FNAME', 35342, NOW()
);

INSERT INTO SERVICE_STORE(SERVICE_ID, STORE_NAME, STORE_DETAIL, STORE_TYPE, STORE_ADDRESS, STORE_TEL, STORE_HOUR) VALUES (
  'winetree', '매장 이름', '매장 설명', '업종', '매장의 주소', '매장 전화번호', '영업시간 안내'
);

COMMIT;


DROP TABLE IF EXISTS `STORE_(SERVICE_ID)_ACCOUNT`;

CREATE TABLE `STORE_(SERVICE_ID)_ACCOUNT` (
	`USER_ID`	VARCHAR	NOT NULL,
	`SERVICE_ID`	VARCHAR	NOT NULL,
	`USER_EMAIL`	VARCHAR	NULL,
	`USER_PW`	VARCHAR	NULL,
	`USER_TYPE`	CHAR	NULL	DEFAULT C,
	`USER_REGDATE`	DATE	NULL	DEFAULT NOW(),
	`POINT`	INTEGER	NULL	DEFAULT 0,
	`DELFLAG`	CHAR	NULL	DEFAULT U
);

DROP TABLE IF EXISTS `STORE_(SERVICE_ID)_(STORE_SEQ)_CATEGORY`;

CREATE TABLE `STORE_(SERVICE_ID)_(STORE_SEQ)_CATEGORY` (
	`MENU_SEQ`	INTEGER	NOT NULL	DEFAULT AUTO INCREASE,
	`MENU_NAME`	VARCHAR	NOT NULL,
	`CATEG_NAME`	VARCHAR	NOT NULL,
	`MENU_INFO`	VARCHAR	NOT NULL,
	`ORIGIN_PNAME`	VARCHAR	NOT NULL,
	`STORED_PNAME`	VARCHAR	NOT NULL,
	`MENU_PRICE`	INTEGER	NOT NULL	DEFAULT 0,
	`DELFLAG`	CHAR	NULL	DEFAULT U
);

DROP TABLE IF EXISTS `STORE_(SERVICE_ID)_(STORE_SEQ)_TABLE`;

CREATE TABLE `STORE_(SERVICE_ID)_(STORE_SEQ)_TABLE` (
	`TABLE_SEQ`	INTEGER	NOT NULL	DEFAULT AUTO INCREASE,
	`STORE_SEQ`	INTEGER	NOT NULL	DEFAULT AUTO INCREASE,
	`TABLE_NAME`	INTEGER	NOT NULL,
	`RESERVATION`	CHAR	NULL,
	`MIN_PEOPLE`	INTEGER	NOT NULL	DEFAULT 1,
	`MAX_PEOPLE`	INTEGER	NULL,
	`DELFLAG`	CHAR	NOT NULL	DEFAULT N
);

DROP TABLE IF EXISTS `STORE_(SERVICE_ID)_(STORE_SEQ)_ORDER`;

CREATE TABLE `STORE_(SERVICE_ID)_(STORE_SEQ)_ORDER` (
	`ORDER_SEQ`	INTEGER	NOT NULL	DEFAULT AUTO INCREASE,
	`INVOICE_SEQ`	INTEGER	NOT NULL	DEFAULT AUTO INCREASE,
	`MENU_SEQ`	INTEGER	NOT NULL	DEFAULT AUTO INCREASE,
	`PAID_DATE`	DATE	NOT NULL	DEFAULT INVOICE.PAID_DATE,
	`MENU_PRICE`	INTEGER	NOT NULL	DEFAULT CATEGORY.MENU_PRICE
);

DROP TABLE IF EXISTS `STORE_(SERVICE_ID)_(STORE_SEQ)_INVOICE`;

CREATE TABLE `STORE_(SERVICE_ID)_(STORE_SEQ)_INVOICE` (
	`INVOICE_SEQ`	INTEGER	NOT NULL	DEFAULT AUTO INCREASE,
	`TABLE_SEQ`	INTEGER	NOT NULL	DEFAULT AUTO INCREASE,
	`STORE_SEQ`	INTEGER	NOT NULL	DEFAULT AUTO INCREASE,
	`MENU_AMOUNT`	INTEGER	NOT NULL,
	`TAX_AMOUNT`	INTEGER	NOT NULL,
	`TOTAL_AMOUNT`	INTEGER	NOT NULL,
	`DISCOUNT`	INTEGER	NULL	DEFAULT 0,
	`FINAL_AMOUNT`	INTEGER	NOT NULL,
	`PAID_DATE`	DATE	NOT NULL	DEFAULT NOW(),
	`PAYMENT_METHOD`	VARCHAR	NOT NULL,
	`DELFLAG`	CHAR	NOT NULL	DEFAULT N
);

DROP TABLE IF EXISTS `STORE_(SERVICE_ID)_(STORE_SEQ)_CASHBOOK`;

CREATE TABLE `STORE_(SERVICE_ID)_(STORE_SEQ)_CASHBOOK` (
	`STORE_SEQ`	INTEGER	NOT NULL	DEFAULT AUTO INCREASE,
	`CASH_DATE`	DATE	NOT NULL	DEFAULT NOW(),
	`CASH_DEPOSIT`	INTEGER	NULL,
	`CASH_WITHDRAW`	INTEGER	NULL,
	`CASH_BALANCE`	INTEGER	NOT NULL	DEFAULT 0
);

DROP TABLE IF EXISTS `STORE_(SERVICE_ID)_(SERVICE_SEQ)_RESERVATION`;

CREATE TABLE `STORE_(SERVICE_ID)_(SERVICE_SEQ)_RESERVATION` (
	`RESERV_SEQ`	INTEGER	NOT NULL	DEFAULT AUTO INCREASE,
	`SERVICE_ID`	VARCHAR	NOT NULL,
	`TABLEL_SEQ`	VARCHAR(255)	NOT NULL,
	`RESERV_TIME`	INTEGER	NOT NULL,
	`RESERV_PEOPLE`	INTEGER	NOT NULL,
	`DELFLAG`	CHAR	NULL	DEFAULT N
);

ALTER TABLE `SERVICE_ACCOUNT` ADD CONSTRAINT `PK_SERVICE_ACCOUNT` PRIMARY KEY (
	`SERVICE_ID`
);

ALTER TABLE `SERVICE_BOARD` ADD CONSTRAINT `PK_SERVICE_BOARD` PRIMARY KEY (
	`BOARD_SEQ`,
	`ID`
);

ALTER TABLE `SERVICE_FILE` ADD CONSTRAINT `PK_SERVICE_FILE` PRIMARY KEY (
	`FILE_SEQ`,
	`BOARD_SEQ`
);

ALTER TABLE `SERVICE_STORE` ADD CONSTRAINT `PK_SERVICE_STORE` PRIMARY KEY (
	`STORE_SEQ`,
	`SERVICE_ID`
);

ALTER TABLE `STORE_(SERVICE_ID)_ACCOUNT` ADD CONSTRAINT `PK_STORE_(SERVICE_ID)_ACCOUNT` PRIMARY KEY (
	`USER_ID`,
	`SERVICE_ID`
);

ALTER TABLE `STORE_(SERVICE_ID)_(STORE_SEQ)_CATEGORY` ADD CONSTRAINT `PK_STORE_(SERVICE_ID)_(STORE_SEQ)_CATEGORY` PRIMARY KEY (
	`MENU_SEQ`
);

ALTER TABLE `STORE_(SERVICE_ID)_(STORE_SEQ)_TABLE` ADD CONSTRAINT `PK_STORE_(SERVICE_ID)_(STORE_SEQ)_TABLE` PRIMARY KEY (
	`TABLE_SEQ`,
	`STORE_SEQ`
);

ALTER TABLE `STORE_(SERVICE_ID)_(STORE_SEQ)_ORDER` ADD CONSTRAINT `PK_STORE_(SERVICE_ID)_(STORE_SEQ)_ORDER` PRIMARY KEY (
	`ORDER_SEQ`,
	`INVOICE_SEQ`,
	`MENU_SEQ`
);

ALTER TABLE `STORE_(SERVICE_ID)_(STORE_SEQ)_INVOICE` ADD CONSTRAINT `PK_STORE_(SERVICE_ID)_(STORE_SEQ)_INVOICE` PRIMARY KEY (
	`INVOICE_SEQ`,
	`TABLE_SEQ`,
	`STORE_SEQ`
);

ALTER TABLE `STORE_(SERVICE_ID)_(STORE_SEQ)_CASHBOOK` ADD CONSTRAINT `PK_STORE_(SERVICE_ID)_(STORE_SEQ)_CASHBOOK` PRIMARY KEY (
	`STORE_SEQ`
);

ALTER TABLE `STORE_(SERVICE_ID)_(SERVICE_SEQ)_RESERVATION` ADD CONSTRAINT `PK_STORE_(SERVICE_ID)_(SERVICE_SEQ)_RESERVATION` PRIMARY KEY (
	`RESERV_SEQ`,
	`SERVICE_ID`,
	`TABLEL_SEQ`
);

ALTER TABLE `SERVICE_BOARD` ADD CONSTRAINT `FK_SERVICE_ACCOUNT_TO_SERVICE_BOARD_1` FOREIGN KEY (
	`ID`
)
REFERENCES `SERVICE_ACCOUNT` (
	`SERVICE_ID`
);

ALTER TABLE `SERVICE_FILE` ADD CONSTRAINT `FK_SERVICE_BOARD_TO_SERVICE_FILE_1` FOREIGN KEY (
	`BOARD_SEQ`
)
REFERENCES `SERVICE_BOARD` (
	`BOARD_SEQ`
);

ALTER TABLE `SERVICE_STORE` ADD CONSTRAINT `FK_SERVICE_ACCOUNT_TO_SERVICE_STORE_1` FOREIGN KEY (
	`SERVICE_ID`
)
REFERENCES `SERVICE_ACCOUNT` (
	`SERVICE_ID`
);

ALTER TABLE `STORE_(SERVICE_ID)_ACCOUNT` ADD CONSTRAINT `FK_SERVICE_ACCOUNT_TO_STORE_(SERVICE_ID)_ACCOUNT_1` FOREIGN KEY (
	`SERVICE_ID`
)
REFERENCES `SERVICE_ACCOUNT` (
	`SERVICE_ID`
);

ALTER TABLE `STORE_(SERVICE_ID)_(STORE_SEQ)_TABLE` ADD CONSTRAINT `FK_SERVICE_STORE_TO_STORE_(SERVICE_ID)_(STORE_SEQ)_TABLE_1` FOREIGN KEY (
	`STORE_SEQ`
)
REFERENCES `SERVICE_STORE` (
	`STORE_SEQ`
);

ALTER TABLE `STORE_(SERVICE_ID)_(STORE_SEQ)_ORDER` ADD CONSTRAINT `FK_STORE_(SERVICE_ID)_(STORE_SEQ)_INVOICE_TO_STORE_(SERVICE_ID)_(STORE_SEQ)_ORDER_1` FOREIGN KEY (
	`INVOICE_SEQ`
)
REFERENCES `STORE_(SERVICE_ID)_(STORE_SEQ)_INVOICE` (
	`INVOICE_SEQ`
);

ALTER TABLE `STORE_(SERVICE_ID)_(STORE_SEQ)_ORDER` ADD CONSTRAINT `FK_STORE_(SERVICE_ID)_(STORE_SEQ)_CATEGORY_TO_STORE_(SERVICE_ID)_(STORE_SEQ)_ORDER_1` FOREIGN KEY (
	`MENU_SEQ`
)
REFERENCES `STORE_(SERVICE_ID)_(STORE_SEQ)_CATEGORY` (
	`MENU_SEQ`
);

ALTER TABLE `STORE_(SERVICE_ID)_(STORE_SEQ)_INVOICE` ADD CONSTRAINT `FK_STORE_(SERVICE_ID)_(STORE_SEQ)_TABLE_TO_STORE_(SERVICE_ID)_(STORE_SEQ)_INVOICE_1` FOREIGN KEY (
	`TABLE_SEQ`
)
REFERENCES `STORE_(SERVICE_ID)_(STORE_SEQ)_TABLE` (
	`TABLE_SEQ`
);

ALTER TABLE `STORE_(SERVICE_ID)_(STORE_SEQ)_INVOICE` ADD CONSTRAINT `FK_STORE_(SERVICE_ID)_(STORE_SEQ)_CASHBOOK_TO_STORE_(SERVICE_ID)_(STORE_SEQ)_INVOICE_1` FOREIGN KEY (
	`STORE_SEQ`
)
REFERENCES `STORE_(SERVICE_ID)_(STORE_SEQ)_CASHBOOK` (
	`STORE_SEQ`
);

ALTER TABLE `STORE_(SERVICE_ID)_(STORE_SEQ)_CASHBOOK` ADD CONSTRAINT `FK_SERVICE_STORE_TO_STORE_(SERVICE_ID)_(STORE_SEQ)_CASHBOOK_1` FOREIGN KEY (
	`STORE_SEQ`
)
REFERENCES `SERVICE_STORE` (
	`STORE_SEQ`
);

ALTER TABLE `STORE_(SERVICE_ID)_(SERVICE_SEQ)_RESERVATION` ADD CONSTRAINT `FK_STORE_(SERVICE_ID)_ACCOUNT_TO_STORE_(SERVICE_ID)_(SERVICE_SEQ)_RESERVATION_1` FOREIGN KEY (
	`SERVICE_ID`
)
REFERENCES `STORE_(SERVICE_ID)_ACCOUNT` (
	`SERVICE_ID`
);

ALTER TABLE `STORE_(SERVICE_ID)_(SERVICE_SEQ)_RESERVATION` ADD CONSTRAINT `FK_STORE_(SERVICE_ID)_(STORE_SEQ)_TABLE_TO_STORE_(SERVICE_ID)_(SERVICE_SEQ)_RESERVATION_1` FOREIGN KEY (
	`TABLEL_SEQ`
)
REFERENCES `STORE_(SERVICE_ID)_(STORE_SEQ)_TABLE` (
	`TABLE_SEQ`
);

